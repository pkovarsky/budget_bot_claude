#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from database import create_tables, get_db_session, CategoryMemory
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def migrate_memory_system():
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É category_memory –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    """
    try:
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ø–∞–º—è—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã (–≤–∫–ª—é—á–∞—è –Ω–æ–≤—É—é CategoryMemory)
        create_tables()
        
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        logger.info("–¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞—à–∏ –≤—ã–±–æ—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∏—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
        db = get_db_session()
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ
            count = db.query(CategoryMemory).count()
            logger.info(f"–¢–∞–±–ª–∏—Ü–∞ category_memory —Å–æ–∑–¥–∞–Ω–∞, –∑–∞–ø–∏—Å–µ–π: {count}")
        finally:
            db.close()
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False
        
    return True

if __name__ == "__main__":
    success = migrate_memory_system()
    if success:
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏")
        sys.exit(1)