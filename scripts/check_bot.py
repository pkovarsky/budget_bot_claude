#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Budget Bot
"""

import os
import psutil
from datetime import datetime

def find_running_bot_processes():
    """–ù–∞–π—Ç–∏ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"""
    running_processes = []
    
    for proc in psutil.process_iter(['pid', 'name', 'cmdline', 'create_time', 'memory_info']):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ bot.py –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            if proc.info['cmdline'] and any('bot.py' in arg for arg in proc.info['cmdline']):
                running_processes.append(proc.info)
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    
    return running_processes

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    env_vars = {
        'TELEGRAM_BOT_TOKEN': os.getenv('TELEGRAM_BOT_TOKEN'),
        'OPENAI_API_KEY': os.getenv('OPENAI_API_KEY'),
        'DATABASE_URL': os.getenv('DATABASE_URL', 'sqlite:///budget_bot.db')
    }
    
    return env_vars

def check_files():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã"""
    required_files = [
        'bot.py',
        'config.py', 
        'database.py',
        'openai_service.py',
        'chart_service.py'
    ]
    
    file_status = {}
    for file_name in required_files:
        file_status[file_name] = os.path.exists(file_name)
    
    return file_status

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç Budget Bot - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    running_bots = find_running_bot_processes()
    
    if running_bots:
        print(f"üü¢ –°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù ({len(running_bots)} –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)")
        
        for i, bot_process in enumerate(running_bots, 1):
            pid = bot_process['pid']
            create_time = datetime.fromtimestamp(bot_process['create_time'])
            memory_mb = bot_process['memory_info'].rss / 1024 / 1024
            
            print(f"  üìä –ü—Ä–æ—Ü–µ—Å—Å {i}:")
            print(f"    PID: {pid}")
            print(f"    –ó–∞–ø—É—â–µ–Ω: {create_time.strftime('%Y-%m-%d %H:%M:%S')}")
            print(f"    –ü–∞–º—è—Ç—å: {memory_mb:.1f} MB")
    else:
        print("üî¥ –°—Ç–∞—Ç—É—Å: –ù–ï –ó–ê–ü–£–©–ï–ù")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\nüîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    env_vars = check_environment()
    
    for var_name, var_value in env_vars.items():
        if var_value:
            masked_value = var_value[:10] + "..." if len(var_value) > 10 else var_value
            print(f"  ‚úÖ {var_name}: {masked_value}")
        else:
            print(f"  ‚ùå {var_name}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:")
    file_status = check_files()
    
    for file_name, exists in file_status.items():
        status = "‚úÖ" if exists else "‚ùå"
        print(f"  {status} {file_name}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\nüíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
    db_file = "budget_bot.db"
    if os.path.exists(db_file):
        db_size = os.path.getsize(db_file) / 1024  # KB
        print(f"  ‚úÖ {db_file}: {db_size:.1f} KB")
    else:
        print(f"  ‚ö†Ô∏è  {db_file}: –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:")
    
    issues = []
    
    if not running_bots:
        issues.append("–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    
    if not env_vars['TELEGRAM_BOT_TOKEN']:
        issues.append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç TELEGRAM_BOT_TOKEN")
    
    if not env_vars['OPENAI_API_KEY']:
        issues.append("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç OPENAI_API_KEY")
    
    missing_files = [f for f, exists in file_status.items() if not exists]
    if missing_files:
        issues.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
    
    if issues:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã:")
        for issue in issues:
            print(f"  ‚Ä¢ {issue}")
        
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        if not running_bots:
            print("  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python start_bot.py")
        if not env_vars['TELEGRAM_BOT_TOKEN'] or not env_vars['OPENAI_API_KEY']:
            print("  ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏")
        if missing_files:
            print("  ‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã")
    else:
        print("‚úÖ –í—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

if __name__ == "__main__":
    main()