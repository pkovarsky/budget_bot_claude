#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.chart_service import ChartService
from database import get_db_session, User, Transaction, Category
from datetime import datetime, timedelta

def check_user_data(telegram_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db = get_db_session()
    try:
        # –ù–∞–π–¥—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.telegram_id == telegram_id).first()
        if not user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.name or '–±–µ–∑ –∏–º–µ–Ω–∏'} (@{user.username or '–±–µ–∑ username'})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = db.query(Category).filter(Category.user_id == user.id).all()
        print(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
        for cat in categories:
            print(f"  - {cat.emoji or 'üìÅ'} {cat.name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        transactions = db.query(Transaction).filter(Transaction.user_id == user.id).all()
        print(f"üí∞ –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(transactions)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        start_date = datetime.now() - timedelta(days=30)
        recent_expenses = db.query(Transaction).filter(
            Transaction.user_id == user.id,
            Transaction.amount < 0,
            Transaction.created_at >= start_date
        ).all()
        
        print(f"üìâ –†–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: {len(recent_expenses)}")
        
        if recent_expenses:
            total_amount = sum(abs(t.amount) for t in recent_expenses)
            print(f"üí∏ –û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤: {total_amount:.2f}")
            
            # –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
            category_expenses = {}
            for t in recent_expenses:
                cat_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                for cat in categories:
                    if cat.id == t.category_id:
                        cat_name = cat.name
                        break
                
                if cat_name not in category_expenses:
                    category_expenses[cat_name] = 0
                category_expenses[cat_name] += abs(t.amount)
            
            print(f"üìä –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
            for cat_name, amount in category_expenses.items():
                print(f"  - {cat_name}: {amount:.2f}")
        
        return len(recent_expenses) > 0
        
    finally:
        db.close()

def test_chart_generation(telegram_id: int):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≥—Ä–∞—Ñ–∏–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    chart_service = ChartService()
    
    # –¢–µ—Å—Ç –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É...")
    try:
        pie_chart = chart_service.generate_category_pie_chart(telegram_id, 30)
        if pie_chart:
            print(f"‚úÖ –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Å–æ–∑–¥–∞–Ω–∞ (—Ä–∞–∑–º–µ—Ä: {len(pie_chart.getvalue())} –±–∞–π—Ç)")
        else:
            print("‚ùå –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã: {e}")
    
    # –¢–µ—Å—Ç –≥—Ä–∞—Ñ–∏–∫–∞ —Ç—Ä–µ–Ω–¥–æ–≤
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤...")
    try:
        trends_chart = chart_service.generate_spending_trends_chart(telegram_id, 30)
        if trends_chart:
            print(f"‚úÖ –ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤ —Å–æ–∑–¥–∞–Ω (—Ä–∞–∑–º–µ—Ä: {len(trends_chart.getvalue())} –±–∞–π—Ç)")
        else:
            print("‚ùå –ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–µ —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ —Ç—Ä–µ–Ω–¥–æ–≤: {e}")
    
    # –¢–µ—Å—Ç –º–µ—Å—è—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Å—è—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ...")
    try:
        monthly_chart = chart_service.generate_monthly_comparison_chart(telegram_id, 6)
        if monthly_chart:
            print(f"‚úÖ –ú–µ—Å—è—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ (—Ä–∞–∑–º–µ—Ä: {len(monthly_chart.getvalue())} –±–∞–π—Ç)")
        else:
            print("‚ùå –ú–µ—Å—è—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ—Å—è—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≥—Ä–∞—Ñ–∏–∫–æ–≤ Budget Bot")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        telegram_id = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram ID (—Ü–∏—Ñ—Ä—ã): ").strip()
        telegram_id = int(telegram_id)
    except ValueError:
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Telegram ID")
        return
    
    print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}...")
    has_data = check_user_data(telegram_id)
    
    if not has_data:
        print("\n‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π.")
        print("–ì—Ä–∞—Ñ–∏–∫–∏ –º–æ–≥—É—Ç –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã—Ö.")
        print("\n–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –î–æ–±–∞–≤—å—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ –±–æ—Ç–∞")
        print("2. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É")
        return
    
    print(f"\nüìà –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≥—Ä–∞—Ñ–∏–∫–æ–≤...")
    test_chart_generation(telegram_id)
    
    print("\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()