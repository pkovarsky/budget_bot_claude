import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

from database import get_db_session, User, Category
from utils.localization import get_message, get_default_categories, get_supported_languages

logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = update.effective_user.id
    username = update.effective_user.username
    
    db = get_db_session()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        if not user:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫
            await show_language_selection(update, user_id, username)
            return
        else:
            # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            name = user.name or "–¥—Ä—É–≥"
            await update.message.reply_text(
                f"{get_message('welcome_back', user.language, name=name)}\n\n"
                f"{get_message('help_commands', user.language)}"
            )
    finally:
        db.close()


async def show_language_selection(update: Update, user_id: int, username: str) -> None:
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    languages = get_supported_languages()
    keyboard = []
    
    for lang_code, lang_name in languages.items():
        keyboard.append([InlineKeyboardButton(
            lang_name, 
            callback_data=f"setup_lang_{lang_code}_{user_id}_{username or 'unknown'}"
        )])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üåç –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Budget Bot!\n"
        "Welcome to Budget Bot!\n"
        "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Budget Bot!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language / –û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É:",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def handle_language_setup(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    query = update.callback_query
    await query.answer()
    
    data_parts = query.data.split('_')
    if len(data_parts) < 4:
        return
    
    language = data_parts[2]
    user_id = int(data_parts[3])
    username = data_parts[4] if data_parts[4] != 'unknown' else None
    
    db = get_db_session()
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(
            telegram_id=user_id, 
            username=username,
            language=language
        )
        db.add(user)
        db.commit()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
        default_categories = get_default_categories(language)
        for cat_name in default_categories:
            category = Category(name=cat_name, user_id=user.id, is_default=True)
            db.add(category)
        db.commit()
        
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
        welcome_text = (
            f"{get_message('welcome', language, name='–¥—Ä—É–≥')}\n\n"
            f"{get_message('start_description', language)}\n\n"
            f"{get_message('help_commands', language)}"
        )
        
        await query.edit_message_text(welcome_text, parse_mode='Markdown')
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–∫–∞–∑–∞—Ç—å –∏–º—è
        await ask_for_name(query, user, language)
        
    finally:
        db.close()


async def ask_for_name(query, user, language: str) -> None:
    """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–∫–∞–∑–∞—Ç—å –∏–º—è"""
    keyboard = [
        [InlineKeyboardButton(
            "üë§ –£–∫–∞–∑–∞—Ç—å –∏–º—è", 
            callback_data=f"setup_name_{user.id}"
        )],
        [InlineKeyboardButton(
            "‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", 
            callback_data="setup_skip_name"
        )]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
    from telegram import Bot
    bot = Bot.get_current()
    await bot.send_message(
        chat_id=query.message.chat_id,
        text=f"üëã –•–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å –≤–∞—à–µ –∏–º—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏?",
        reply_markup=reply_markup
    )


async def handle_name_setup(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–µ–Ω–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "setup_skip_name":
        await query.edit_message_text("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.")
        return
    
    if query.data.startswith("setup_name_"):
        user_id = int(query.data.split('_')[2])
        context.user_data['setting_up_name'] = user_id

        keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="setup_back")]]
        await query.edit_message_text(
            "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (–¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤):",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return
    if query.data == "setup_back":
        db = get_db_session()
        try:
            user = db.query(User).filter(User.telegram_id == query.from_user.id).first()
            language = user.language if user else "ru"
            await ask_for_name(query, user, language)
        finally:
            db.close()
        context.user_data.pop('setting_up_name', None)
        return


async def handle_name_input_setup(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    if 'setting_up_name' not in context.user_data:
        return
    
    user_id = context.user_data['setting_up_name']
    name = update.message.text.strip()
    
    if not name or len(name) > 50:
        await update.message.reply_text("–ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    
    db = get_db_session()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        if user:
            user.name = name
            db.commit()
            
            await update.message.reply_text(
                f"‚úÖ –ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}!\n\n"
                f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥.",
                parse_mode='Markdown'
            )
        
    finally:
        db.close()
        context.user_data.pop('setting_up_name', None)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –º–µ–Ω—é"""
    user_id = update.effective_user.id
    
    db = get_db_session()
    try:
        user = db.query(User).filter(User.telegram_id == user_id).first()
        language = user.language if user else "ru"
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏
        help_text = """
ü§ñ **Budget Bot - –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤**

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:
        """
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [
                InlineKeyboardButton("üí∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Ç", callback_data="help_transactions"),
                InlineKeyboardButton("üì∏ –§–æ—Ç–æ —á–µ–∫–æ–≤", callback_data="help_photos")
            ],
            [
                InlineKeyboardButton("üß† –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data="help_memory"),
                InlineKeyboardButton("üìä –ö–æ–º–∞–Ω–¥—ã", callback_data="help_commands")
            ],
            [
                InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="help_notifications"),
                InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫–∏", callback_data="help_charts")
            ],
            [
                InlineKeyboardButton("üéØ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç", callback_data="help_quickstart")
            ]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(help_text, reply_markup=reply_markup, parse_mode='Markdown')
        
    finally:
        db.close()


async def handle_help_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤ –¥–ª—è —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    query = update.callback_query
    await query.answer()
    
    help_section = query.data.replace("help_", "")
    
    help_texts = {
        "transactions": """
üí∞ **–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Ç**

**–†–∞—Å—Ö–æ–¥—ã (EUR –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):**
‚Ä¢ `35 –ø—Ä–æ–¥—É–∫—Ç—ã` ‚Üí 35 EUR –ø—Ä–æ–¥—É–∫—Ç—ã
‚Ä¢ `150 USD —Ç–∞–∫—Å–∏` ‚Üí —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤–∞–ª—é—Ç—ã
‚Ä¢ `20 –∫–æ—Ñ–µ` ‚Üí 20 EUR –∫–æ—Ñ–µ

**–î–æ—Ö–æ–¥—ã (—Å –ø–ª—é—Å–æ–º):**
‚Ä¢ `+2000 –∑–∞—Ä–ø–ª–∞—Ç–∞` ‚Üí +2000 EUR –∑–∞—Ä–ø–ª–∞—Ç–∞
‚Ä¢ `+500 USD —Ñ—Ä–∏–ª–∞–Ω—Å` ‚Üí +500 USD —Ñ—Ä–∏–ª–∞–Ω—Å

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–∞–ª—é—Ç—ã:**
EUR (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), USD

**–§–æ—Ä–º–∞—Ç:** —Å—É–º–º–∞ + [–≤–∞–ª—é—Ç–∞] + –æ–ø–∏—Å–∞–Ω–∏–µ
        """,
        
        "photos": """
üì∏ **–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ —á–µ–∫–æ–≤**

**–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. –°–¥–µ–ª–∞–π—Ç–µ —á–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ —á–µ–∫–∞
2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ —á–∞—Ç
3. –ò–ò –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∏ –¥–æ–±–∞–≤–∏—Ç –ø–æ–∫—É–ø–∫–∏

**–ß—Ç–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç:**
‚Ä¢ –û–±—â—É—é —Å—É–º–º—É –∏ –≤–∞–ª—é—Ç—É
‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã (–µ—Å–ª–∏ —Ä–∞–∑–ª–∏—á–∏–º–æ)
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:**
‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (PNG, JPG)
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
‚Ä¢ –†–∞–∑–º–µ—Ä –¥–æ 20MB
        """,
        
        "memory": """
üß† **–£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–∞–º—è—Ç–∏**

**–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚Ä¢ –ë–æ—Ç –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≤–∞—à–∏ –≤—ã–±–æ—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
‚Ä¢ –î–ª—è –ø–æ—Ö–æ–∂–∏—Ö –æ–ø–∏—Å–∞–Ω–∏–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ç—É –∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é
‚Ä¢ –ß–µ–º —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ú–µ–Ω—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥ –≤–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏

**–ü—Ä–∏–º–µ—Ä—ã:**
1. –ü–µ—Ä–≤—ã–π —Ä–∞–∑: "–ø—Ä–æ–¥—É–∫—Ç—ã" ‚Üí –≤—ã–±–∏—Ä–∞–µ—Ç–µ "–ï–¥–∞"
2. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑: "–ø—Ä–æ–¥—É–∫—Ç—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ" ‚Üí –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç "–ï–¥–∞"

**–°–æ–≤–µ—Ç:** –°–∏—Å—Ç–µ–º–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–º–Ω–µ–µ —Å –∫–∞–∂–¥—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º!
        """,
        
        "commands": """
üìä **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞**

**–û—Å–Ω–æ–≤–Ω—ã–µ:**
‚Ä¢ `/categories` - üìÅ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
‚Ä¢ `/stats` - ‚ö° –±—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ `/charts` - üìà –≥—Ä–∞—Ñ–∏–∫–∏ —Å –≤—ã–±–æ—Ä–æ–º –ø–µ—Ä–∏–æ–¥–∞

**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**
‚Ä¢ `/limits` - üí≥ –ª–∏–º–∏—Ç—ã —Ä–∞—Å—Ö–æ–¥–æ–≤
‚Ä¢ `/export` - üì§ —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel
‚Ä¢ `/edit` - ‚úèÔ∏è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏

**–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ `/notifications` - üîî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ `/settings` - ‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
‚Ä¢ `/help` - üìñ —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

**–ù–∞–≤–∏–≥–∞—Ü–∏—è:** 
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ "‚óÄÔ∏è –ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        """,
        
        "notifications": """
üîî **–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π**

**–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ç—Ä–∞—Ç–∞—Ö:**
‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏ —Ç—Ä–∞—Ç—ã –∑–∞ –¥–µ–Ω—å

**–ë—é–¥–∂–µ—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**
‚Ä¢ –°—Ç–∞—Ç—É—Å –±—é–¥–∂–µ—Ç–∞ —Å —Ä–∞—Å—á–µ—Ç–æ–º –¥–æ –∑–∞—Ä–ø–ª–∞—Ç—ã
‚Ä¢ –°–∫–æ–ª—å–∫–æ –º–æ–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å –≤ –¥–µ–Ω—å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤

**–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å—Ç–æ—Ç—ã (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ/–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ)
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –∑–∞—Ä–ø–ª–∞—Ç—ã
‚Ä¢ –í—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞

**–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:**
`/notifications` ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –æ–ø—Ü–∏–∏
        """,
        
        "charts": """
üìà **–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞**

**–¢–∏–ø—ã –≥—Ä–∞—Ñ–∏–∫–æ–≤:**
‚Ä¢ ü•ß –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞)
‚Ä¢ üìà –¢—Ä–µ–Ω–¥ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–Ω—è–º
‚Ä¢ üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –º–µ—Å—è—Ü–∞–º

**–¢–µ–º–Ω–∞—è —Ç–µ–º–∞:**
‚Ä¢ –°—Ç–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
‚Ä¢ –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ —Ç–µ–Ω–∏ –¥–ª—è –æ–±—ä–µ–º–∞
‚Ä¢ –≠–º–æ–¥–∑–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö

**–ü–µ—Ä–∏–æ–¥—ã:**
‚Ä¢ –î–Ω–∏: 7, 14, 30, 60, 90 –¥–Ω–µ–π
‚Ä¢ –ú–µ—Å—è—Ü—ã: 3, 6, 12, 24 –º–µ—Å—è—Ü–∞

**–î–æ—Å—Ç—É–ø:**
`/charts` ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ –∏ –ø–µ—Ä–∏–æ–¥
        """,
        
        "quickstart": """
üéØ **–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç**

**1. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Ç—Ä–∞—Ç—É:**
`35 –ø—Ä–æ–¥—É–∫—Ç—ã`

**2. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:**
–ë–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤–∞—Ä–∏–∞–Ω—Ç—ã ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π

**3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞:**
–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ª—é–±–æ–≥–æ —á–µ–∫–∞

**4. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:**
`/stats` –∏–ª–∏ `/charts`

**5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**
`/notifications` ‚Üí –≤–∫–ª—é—á–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è

**6. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ª–∏–º–∏—Ç—ã:**
`/limits` ‚Üí –¥–æ–±–∞–≤—å—Ç–µ –ª–∏–º–∏—Ç—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

**–ì–æ—Ç–æ–≤–æ!** –¢–µ–ø–µ—Ä—å –±–æ—Ç –∑–∞–ø–æ–º–Ω–∏—Ç –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

üí° **–°–æ–≤–µ—Ç:** –ß–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç - –æ–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–º–Ω–µ–µ!
        """
    }
    
    if help_section in help_texts:
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–∞–∑–¥–µ–ª–∞–º", callback_data="help_back")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            help_texts[help_section],
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
    elif help_section == "back":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é —Å–ø—Ä–∞–≤–∫–∏
        help_text = """
ü§ñ **Budget Bot - –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤**

–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:
        """
        
        keyboard = [
            [
                InlineKeyboardButton("üí∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞—Ç", callback_data="help_transactions"),
                InlineKeyboardButton("üì∏ –§–æ—Ç–æ —á–µ–∫–æ–≤", callback_data="help_photos")
            ],
            [
                InlineKeyboardButton("üß† –£–º–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞", callback_data="help_memory"),
                InlineKeyboardButton("üìä –ö–æ–º–∞–Ω–¥—ã", callback_data="help_commands")
            ],
            [
                InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="help_notifications"),
                InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫–∏", callback_data="help_charts")
            ],
            [
                InlineKeyboardButton("üéØ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç", callback_data="help_quickstart")
            ]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(help_text, reply_markup=reply_markup, parse_mode='Markdown')