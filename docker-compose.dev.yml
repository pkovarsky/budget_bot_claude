# üõ†Ô∏è Development docker-compose
version: '3.8'

services:
  # ü§ñ Budget Bot (Development)
  budget-bot-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: base  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π stage –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    container_name: budget-bot-dev
    restart: "no"  # –ù–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ dev
    environment:
      - DATABASE_URL=sqlite:////app/data/budget_bot_dev.db
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=development
      - DEBUG=1
    env_file:
      - .env.local
    volumes:
      - .:/app  # –ú–æ–Ω—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è hot reload
      - dev_data:/app/data
      - ./logs:/app/logs
    networks:
      - budget-dev-network
    command: python bot.py
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; sqlite3.connect('/app/data/budget_bot_dev.db').execute('SELECT 1')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üóÑÔ∏è PostgreSQL (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  postgres-dev:
    image: postgres:15-alpine
    container_name: budget-postgres-dev
    restart: "no"
    environment:
      POSTGRES_DB: budget_bot_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - budget-dev-network
    ports:
      - "5433:5432"  # –î—Ä—É–≥–æ–π –ø–æ—Ä—Ç –¥–ª—è dev

  # üü• Redis (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è)
  redis-dev:
    image: redis:7-alpine
    container_name: budget-redis-dev
    restart: "no"
    command: redis-server --requirepass dev_password
    volumes:
      - redis_dev_data:/data
    networks:
      - budget-dev-network
    ports:
      - "6380:6379"  # –î—Ä—É–≥–æ–π –ø–æ—Ä—Ç –¥–ª—è dev

  # üìß MailHog (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: budget-mailhog
    restart: "no"
    networks:
      - budget-dev-network
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI

  # üß™ Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: budget-test-runner
    environment:
      - DATABASE_URL=sqlite:///tmp/test.db
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    networks:
      - budget-dev-network
    command: python -m pytest tests/ -v
    profiles:
      - testing

networks:
  budget-dev-network:
    driver: bridge

volumes:
  dev_data:
    driver: local
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local